{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useAppDispatch, useAppSelector } from \"../redux/store\";\nimport { setMessage } from \"../redux/initSlice\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BgImage = function BgImage() {\n  return _jsx(Image, {\n    source: require(\"../assets/cl_start_bg.webp\"),\n    style: {\n      width: '100%',\n      height: '40%'\n    }\n  });\n};\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n  var apiOrigin = process.env.EXPO_PUBLIC_API_ORIGIN;\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.message;\n    }),\n    message = _useAppSelector.message;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(BgImage, {}), _jsx(Text, {\n      children: \"Open up App.js to start working on your app!!\"\n    }), _jsxs(Text, {\n      children: [\"EXPO_PUBLIC_API_ORIGIN: \", apiOrigin]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Button, {\n      title: \"Go to Details\",\n      onPress: function onPress() {\n        return navigation.navigate('Details');\n      }\n    }), _jsxs(Text, {\n      style: {\n        marginTop: 5\n      },\n      children: [\"Redux msg: \", message]\n    }), _jsx(Button, {\n      title: \"Set new message\",\n      onPress: function onPress() {\n        return dispatch(setMessage('New Message from Component'));\n      }\n    }), _jsx(Button, {\n      title: \"\\u0417\\u0430\\u043A\\u0430\\u0437\",\n      onPress: function onPress() {\n        return navigation.navigate('Order');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Button","useAppDispatch","useAppSelector","setMessage","Image","jsx","_jsx","jsxs","_jsxs","BgImage","source","require","style","width","height","HomeScreen","_ref","navigation","dispatch","apiOrigin","process","env","EXPO_PUBLIC_API_ORIGIN","_useAppSelector","state","message","styles","container","children","title","onPress","navigate","marginTop","create","flex","flexDirection","backgroundColor","alignItems","justifyContent"],"sources":["/home/r2user/remrob/r2cleaning/services/nativeapp/screens/home.tsx"],"sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport {StyleSheet, Text, View, Button} from 'react-native';\nimport {useAppDispatch, useAppSelector} from '../redux/store';\nimport {setMessage} from '../redux/initSlice';\nimport {Image} from 'react-native';\n\nconst BgImage = () => (\n  <Image\n    source={require('../assets/cl_start_bg.webp')}\n    style={{width: '100%', height: '40%'}}\n  />\n);\n// const BgImage2 = () => <Image source={require('../assets/')} />;\n\nexport default function HomeScreen({navigation}) {\n  const dispatch = useAppDispatch();\n  const apiOrigin = process.env.EXPO_PUBLIC_API_ORIGIN;\n  const {message} = useAppSelector((state) => state.message);\n  return (\n    <View style={styles.container}>\n      <Text>Home Screen</Text>\n      <BgImage />\n      <Text>Open up App.js to start working on your app!!</Text>\n      <Text>EXPO_PUBLIC_API_ORIGIN: {apiOrigin}</Text>\n      <StatusBar style=\"auto\" />\n      <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate('Details')}\n      />\n      <Text style={{marginTop: 5}}>Redux msg: {message}</Text>\n      <Button\n        title=\"Set new message\"\n        onPress={() => dispatch(setMessage('New Message from Component'))}\n      />\n      <Button title=\"Заказ\" onPress={() => navigation.navigate('Order')} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE1C,SAAQC,cAAc,EAAEC,cAAc;AACtC,SAAQC,UAAU;AAA4B,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG9C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA;EAAA,OACXH,IAAA,CAACF,KAAK;IACJM,MAAM,EAAEC,OAAO,6BAA6B,CAAE;IAC9CC,KAAK,EAAE;MAACC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAK;EAAE,CACvC,CAAC;AAAA,CACH;AAGD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5C,IAAMC,QAAQ,GAAGjB,cAAc,CAAC,CAAC;EACjC,IAAMkB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACpD,IAAAC,eAAA,GAAkBrB,cAAc,CAAC,UAACsB,KAAK;MAAA,OAAKA,KAAK,CAACC,OAAO;IAAA,EAAC;IAAnDA,OAAO,GAAAF,eAAA,CAAPE,OAAO;EACd,OACEjB,KAAA,CAACT,IAAI;IAACa,KAAK,EAAEc,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BtB,IAAA,CAACR,IAAI;MAAA8B,QAAA,EAAC;IAAW,CAAM,CAAC,EACxBtB,IAAA,CAACG,OAAO,IAAE,CAAC,EACXH,IAAA,CAACR,IAAI;MAAA8B,QAAA,EAAC;IAA6C,CAAM,CAAC,EAC1DpB,KAAA,CAACV,IAAI;MAAA8B,QAAA,GAAC,0BAAwB,EAACT,SAAS;IAAA,CAAO,CAAC,EAChDb,IAAA,CAACV,SAAS;MAACgB,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BN,IAAA,CAACN,MAAM;MACL6B,KAAK,EAAC,eAAe;MACrBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMb,UAAU,CAACc,QAAQ,CAAC,SAAS,CAAC;MAAA;IAAC,CAC/C,CAAC,EACFvB,KAAA,CAACV,IAAI;MAACc,KAAK,EAAE;QAACoB,SAAS,EAAE;MAAC,CAAE;MAAAJ,QAAA,GAAC,aAAW,EAACH,OAAO;IAAA,CAAO,CAAC,EACxDnB,IAAA,CAACN,MAAM;MACL6B,KAAK,EAAC,iBAAiB;MACvBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMZ,QAAQ,CAACf,UAAU,CAAC,4BAA4B,CAAC,CAAC;MAAA;IAAC,CACnE,CAAC,EACFG,IAAA,CAACN,MAAM;MAAC6B,KAAK,EAAC,gCAAO;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMb,UAAU,CAACc,QAAQ,CAAC,OAAO,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CACjE,CAAC;AAEX;AAEA,IAAML,MAAM,GAAG7B,UAAU,CAACoC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,QAAQ;IACvBC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}