{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport messageReducer from \"./initSlice\";\nimport { useDispatch, useSelector } from 'react-redux';\nexport var store = configureStore({\n  reducer: {\n    message: messageReducer\n  }\n});\nexport var getAppState = function getAppState() {\n  return store.getState();\n};\nexport var useAppDispatch = useDispatch;\nexport var useAppSelector = useSelector;","map":{"version":3,"names":["configureStore","messageReducer","useDispatch","useSelector","store","reducer","message","getAppState","getState","useAppDispatch","useAppSelector"],"sources":["/home/r2user/remrob/r2cleaning/services/nativeapp/redux/store.tsx"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit';\nimport messageReducer from './initSlice';\nimport {useDispatch, useSelector} from 'react-redux';\nimport type {TypedUseSelectorHook} from 'react-redux';\n\nexport const store = configureStore({\n  reducer: {\n    message: messageReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const getAppState = () => store.getState();\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,cAAc;AACrB,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAGpD,OAAO,IAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACPC,OAAO,EAAEL;EACX;AACF,CAAC,CAAC;AAIF,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAASH,KAAK,CAACI,QAAQ,CAAC,CAAC;AAAA;AAEjD,OAAO,IAAMC,cAAiC,GAAGP,WAAW;AAC5D,OAAO,IAAMQ,cAA+C,GAAGP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}