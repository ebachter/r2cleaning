{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { store } from \"./store\";\nvar messageSlice = createSlice({\n  name: 'message',\n  initialState: {\n    message: 'Initial message'\n  },\n  reducers: {\n    setMessage: function setMessage(state, action) {\n      state.message = action.payload;\n    }\n  }\n});\nvar setMessage = function setMessage(str) {\n  store.dispatch(messageSlice.actions.setMessage(str));\n};\nexport default messageSlice.reducer;","map":{"version":3,"names":["createSlice","store","messageSlice","name","initialState","message","reducers","setMessage","state","action","payload","str","dispatch","actions","reducer"],"sources":["/home/r2user/remrob/r2cleaning/services/nativeapp/redux/initSlice.tsx"],"sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {store} from './store';\n\nconst messageSlice = createSlice({\n  name: 'message',\n  initialState: {\n    message: 'Initial message',\n  },\n  reducers: {\n    setMessage(state, action: PayloadAction<string>) {\n      state.message = action.payload;\n    },\n  },\n});\n\n// export const {setMessage} = messageSlice.actions;\n\nconst setMessage = (str: string) => {\n  store.dispatch(messageSlice.actions.setMessage(str));\n};\n\nexport default messageSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAsB,kBAAkB;AAC3D,SAAQC,KAAK;AAEb,IAAMC,YAAY,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,WAAAA,WAACC,KAAK,EAAEC,MAA6B,EAAE;MAC/CD,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACC,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AAIF,IAAMH,UAAU,GAAG,SAAbA,UAAUA,CAAII,GAAW,EAAK;EAClCV,KAAK,CAACW,QAAQ,CAACV,YAAY,CAACW,OAAO,CAACN,UAAU,CAACI,GAAG,CAAC,CAAC;AACtD,CAAC;AAED,eAAeT,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}